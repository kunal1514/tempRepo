<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">

<html>
<head>
<title>Global variables</title>

<link REL=STYLESHEET TYPE="text/css" HREF="seagate.css">

<!--
                 ***********************************
                 * Seagate Software copyright 1999 *
                 ***********************************

                      Template version: 5.1
-->


</head>

<body bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#0000FF" alink="#800080">


 
<a name="145447"></a><h4 class="newpage"> Global variables</h4><p><a name="145448"></a>Global variables use the same memory block to store a value throughout the main report. This value is then available to all formulas that declare the variable, except for those in subreports. You declare a global variable as in the following example:</p><p><code><a name="145449"></a>Global StringVar y;</code></p><p><a name="145450"></a>You can also omit the Global keyword which creates a Global variable by default:</p><p><code><a name="145451"></a>StringVar y; //Same as: Global StringVar y;</code></p><p><a name="145452"></a>However, even though global variables are easy to declare, it is recommended that you use them only when local variables do not suffice.</p><p><a name="145453"></a>Since global variables share their values throughout the main report, you cannot declare a global variable in one formula with one type and then declare a global variable with the same name in a different formula with a different type.</p><a name="151342"></a><h5>Example</h5><PRE><a name="145455"></a>//Formula A
<a name="145456"></a>Global DateVar z;
<a name="145457"></a>z := CDate (1999, 9, 18)
<a name="145459"></a>//Formula B
<a name="145460"></a>NumberVar z;
<a name="145461"></a>z := 20
</PRE><p><a name="145462"></a>In this case, if you enter and save Formula A first, Seagate Crystal Reports will return an error when you check or try to save Formula B. This is because the declaration of the Global variable z as a Number conflicts with its earlier declaration in Formula A as a Date.</p><a name="145463"></a><h5>Using Global variables</h5><p><a name="145464"></a>Global variables are often used to perform complex calculations where the results of a formula depend upon the grouping and page layout of the actual printed report. This is accomplished by creating several formulas, placing them in different sections of the report, and having the different formulas interact via global variables.</p><a name="151337"></a><h5>Example</h5><PRE><a name="145465"></a>//Formula C
<a name="145466"></a>Global NumberVar x;
<a name="145467"></a>x := 10;
<a name="145469"></a>//Formula D
<a name="145470"></a>//Call the function WhileReadingRecords
<a name="145471"></a>WhileReadingRecords;
<a name="145472"></a>Global NumberVar x;
<a name="145473"></a>x := x + 1
</PRE><p><a name="145475"></a>If Formula C is placed in the Report Header and then Formula D is placed in a detail section, Formula C will be evaluated before Formula D. Formula C will be evaluated once and then Formula D will be evaluated for each record appearing in the detail section. Formula C returns 10. For the first detail record, Formula D returns 11. This is because the value 10 of x is retained from when it was set by Formula C. Formula D then adds 1 to this value, setting x to 11 and then returns 11. For the second detail record, formula D return 12, adding 1 to the previously retained value of x which was 11. This process continues for the remaining detail records.</p><p><a name="145477"></a>The call to WhileReadingRecords tells Seagate Crystal Reports to re<nobr>-e</nobr>valuate Formula D as it reads in each record of the report. Otherwise, since the formula does not contain any database fields, the program evaluates it only once before reading the records from the database. The formula will then return the value 11 instead of 11, 12, 13, ... as the successive records are processed.</p><p><a name="145479"></a>If the expression x := x + 1 is replaced by x := x + {Orders Detail.Quantity}, you create the effect of a running total based on {Orders Detail.Quantity}, although it is one starting at 10 rather than 0 because of Formula C. In this case, you can omit the call to WhileReadingRecords, since it will automatically occur because the formula contains a database field.</p>
<hr><br>

<script  language="JavaScript"><!--

var prev = "21_crystalsyntax29.html";
var next = "21_crystalsyntax31.html";

function setTopicID() { 
      var number = "145447"; 
      return number; 
}

// --></script>




<SCRIPT>

if (!window.parent.toc && navigator.appName == "Netscape") {

   document.writeln ('<TABLE ALIGN="left" border="0" cellspacing="0" cellpadding="10">');
   document.writeln ('<TR>');
   document.write ('<TD ALIGN="left">');

   if (prev != "crwTOC.hhc") {
      document.writeln ('<A HREF="' + prev + '">');
      document.writeln ('<IMG SRC="prevpage.gif" HEIGHT=17 BORDER=0 ALT="Previous page"></A>');
   } else {
//   window.alert ('no previous page');
   }

   if (next != "crwIX.hhk") {
      document.writeln ('<A HREF="' + next + '">');
      document.writeln ('<IMG SRC="nextpage.gif" HEIGHT=17 BORDER=0 ALT="Next page"></A>');
   } else {
//   window.alert ('no next page');
   }
   document.writeln ('</TD><TD ALIGN="left">');
   document.writeln ('<A HREF="frameset.htm?TOC">');
   document.writeln ('<IMG SRC="showtoc.gif" HEIGHT=17 BORDER=0 ALT="Click to show the Table of Contents"></A></TD>');
   document.writeln ('<TD ALIGN="left">');
   document.writeln ('<A HREF="frameset.htm?IDX">');
   document.writeln ('<IMG SRC="showix.gif" HEIGHT=17 BORDER=0 ALT="Click to show the Index"></A></TD>');
   document.writeln ('</TD>');
   document.writeln ('</TR>');
   document.writeln ('</TABLE>');

}

</SCRIPT>
<table align="right" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td align="right"><font size="1">Seagate Software, Inc.<br>
    <a href="http://www.seagatesoftware.com">http://www.seagatesoftware.com</a><br>
    Please send comments to:<br>
    <a href="mailto:techpubs@seagatesoftware.com">techpubs@seagatesoftware.com</a><br>
    </font></td>
  </tr>
</table>
</body>
</html>


