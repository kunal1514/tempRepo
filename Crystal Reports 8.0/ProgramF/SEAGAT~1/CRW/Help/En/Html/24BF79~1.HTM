<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">

<html>
<head>
<title>The SQL language</title>

<link REL=STYLESHEET TYPE="text/css" HREF="seagate.css">

<!--
                 ***********************************
                 * Seagate Software copyright 1999 *
                 ***********************************

                      Template version: 5.1
-->


</head>

<body bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#0000FF" alink="#800080">


 
<a name="14420"></a><h4 class="newpage"> The SQL language</h4><p><a name="14421"></a>Since Seagate Crystal Reports uses the SQL language to access client/server databases through ODBC, you can better understand the report generating process by understanding some of the SQL clauses (commands) used:</p><a name="14423"></a><h6>SELECT</h6><p><a name="14424"></a>The SELECT clause indicates specific data items to retrieve from the database tables. The item retrieved may be the values in a database field (column), or it may be the result of a calculation performed while gathering the data. For example:</p><PRE><a name="14425"></a>SELECT
<a name="384746"></a>&nbsp;&nbsp;&nbsp;&nbsp;TABLEA.'CUSTNAME',
<a name="384755"></a>&nbsp;&nbsp;&nbsp;&nbsp;TABLEA.'STATE'
</PRE><a name="14427"></a><h6>DISTINCT</h6><p><a name="14428"></a>The DISTINCT clause forces the query to retrieve only unique (distinct) sets of data. When using the DISTINCT clause, a row of results will be retrieved only once. The previous SELECT statement can be modified to use the DISTINCT clause:</p><PRE><a name="14429"></a>SELECT DISTINCT
<a name="384770"></a>&nbsp;&nbsp;&nbsp;&nbsp;TABLEA.'CUSTNAME',
<a name="384779"></a>&nbsp;&nbsp;&nbsp;&nbsp;TABLEA.'STATE'
</PRE><a name="14431"></a><h6>FROM</h6><p><a name="14432"></a>The FROM clause indicates the sources of the database fields specified in the SELECT clause. FROM lists actual database tables that include the fields and records containing the requested data. The FROM clause generated by Seagate Crystal Reports precedes the name of each table with the alias it uses to identify the table in your report. The following example illustrates the FROM clause used with the SELECT clause:</p><PRE><a name="14433"></a>SELECT
<a name="384794"></a>&nbsp;&nbsp;&nbsp;&nbsp;TABLEA.'CUSTNAME',
<a name="384803"></a>&nbsp;&nbsp;&nbsp;&nbsp;TABLEA.'STATE'
<a name="384812"></a>FROM
<a name="384821"></a>&nbsp;&nbsp;&nbsp;&nbsp;'TABLEA' TABLEA
</PRE><a name="14435"></a><h6>WHERE</h6><p><a name="14436"></a>The WHERE clause has two purposes:</p><ul type="disc"><a name="14437"></a><li>to specify record selection criteria
<a name="100323"></a><li>to show how two database tables are joined.
</ul><p><a name="14439"></a>When WHERE is used to specify record selection criteria, it includes a search condition in order to determine which records (rows of data) are to be retrieved. For example:</p><PRE><a name="14440"></a>SELECT
<a name="384836"></a>&nbsp;&nbsp;&nbsp;&nbsp;MYTABLE.'SALESPERSON',
<a name="384845"></a>&nbsp;&nbsp;&nbsp;&nbsp;MYTABLE.'SALESTOTAL'
<a name="384854"></a>FROM
<a name="384863"></a>&nbsp;&nbsp;&nbsp;&nbsp;'MYTABLE' MYTABLE
<a name="384872"></a>WHERE
<a name="384881"></a>&nbsp;&nbsp;&nbsp;&nbsp;MYTABLE.'SALESTOTAL' &lt; 10000.00
</PRE><p><a name="14441"></a>When WHERE is used to specify how two tables are linked, an SQL join operator sits between the two table names. See <a href="24_under_databases19.html#13619">SQL join types (ODBC data sources)</a>.</p><p><a name="469285"></a>The following is an example of the WHERE clause joining two tables:</p><PRE><a name="14445"></a>SELECT
<a name="384894"></a>&nbsp;&nbsp;&nbsp;&nbsp;CUSTOMER.'CUST_ID',
<a name="384895"></a>&nbsp;&nbsp;&nbsp;&nbsp;CUSTOMER.'CUST_NAME',
<a name="384896"></a>&nbsp;&nbsp;&nbsp;&nbsp;ORDERS.'AMOUNT'
<a name="384897"></a>FROM
<a name="384898"></a>&nbsp;&nbsp;&nbsp;&nbsp;'CUSTOMER' CUSTOMER,
<a name="384899"></a>&nbsp;&nbsp;&nbsp;&nbsp;'ORDERS' ORDERS
<a name="384900"></a>WHERE
<a name="384901"></a>&nbsp;&nbsp;&nbsp;&nbsp;CUSTOMER.'CUST_ID' = ORDERS.'CUST_ID'
</PRE><a name="14447"></a><h6>ORDER BY</h6><p><a name="14448"></a>The ORDER BY clause specifies that the database records retrieved be sorted according to the values in a specific field. If you do not use the ORDER BY clause, the program retrieves records in the order in which they appear in the original database. If you specify more than one field after the ORDER BY clause, the program sorts the records according to the values in the first field specified, then, within that sort, the program sorts the records by the values in the second field specified, and so on. The following SQL statement uses the ORDER BY clause:</p><PRE><a name="14449"></a>SELECT
<a name="384912"></a>&nbsp;&nbsp;&nbsp;&nbsp;MYTABLE.'COMPANY',
<a name="384921"></a>&nbsp;&nbsp;&nbsp;&nbsp;MYTABLE.'CITY',
<a name="384930"></a>&nbsp;&nbsp;&nbsp;&nbsp;MYTABLE.'STATE'
<a name="384939"></a>FROM
<a name="384948"></a>&nbsp;&nbsp;&nbsp;&nbsp;'MYTABLE' MYTABLE
<a name="384957"></a>ORDER BY
<a name="384966"></a>&nbsp;&nbsp;&nbsp;&nbsp;MYTABLE.'STATE' ASC,
<a name="384975"></a>&nbsp;&nbsp;&nbsp;&nbsp;MYTABLE.'CITY' ASC
</PRE><p><a name="349514"></a><font color="darkblue"><b>Note:   &nbsp;&nbsp;&nbsp;</b></font>ASC indicates that the values in the field are sorted in ascending order rather than descending order (DESC). Ascending order sorts letters from A to Z and numbers from 0 to 9.</p>
<a name="18258"></a><h6>GROUP BY</h6><p><a name="14452"></a>The GROUP BY clause retrieves a set of summary data. Instead of retrieving the data itself, GROUP BY groups the data and summarizes each group with an SQL aggregate function. The server returns only the summarization information for each group to Seagate Crystal Reports. </p><p><a name="469295"></a>For example:</p><PRE><a name="14453"></a>SELECT
<a name="384990"></a>&nbsp;&nbsp;&nbsp;&nbsp;MYTABLE.'STATE',
<a name="384999"></a>&nbsp;&nbsp;&nbsp;&nbsp;MYTABLE.'ZIPCODE',
<a name="385008"></a>&nbsp;&nbsp;&nbsp;&nbsp;SUM (MYTABLE.'SALES')
<a name="385017"></a>FROM
<a name="385026"></a>&nbsp;&nbsp;&nbsp;&nbsp;'MYTABLE' MYTABLE
<a name="385035"></a>GROUP BY
<a name="385044"></a>&nbsp;&nbsp;&nbsp;&nbsp;MYTABLE.'STATE',
<a name="385053"></a>&nbsp;&nbsp;&nbsp;&nbsp;MYTABLE.'ZIPCODE'
</PRE>
<hr><br>

<script  language="JavaScript"><!--

var prev = "24_under_databases30.html";
var next = "24_under_databases32.html";

function setTopicID() { 
      var number = "14420"; 
      return number; 
}

// --></script>




<SCRIPT>

if (!window.parent.toc && navigator.appName == "Netscape") {

   document.writeln ('<TABLE ALIGN="left" border="0" cellspacing="0" cellpadding="10">');
   document.writeln ('<TR>');
   document.write ('<TD ALIGN="left">');

   if (prev != "crwTOC.hhc") {
      document.writeln ('<A HREF="' + prev + '">');
      document.writeln ('<IMG SRC="prevpage.gif" HEIGHT=17 BORDER=0 ALT="Previous page"></A>');
   } else {
//   window.alert ('no previous page');
   }

   if (next != "crwIX.hhk") {
      document.writeln ('<A HREF="' + next + '">');
      document.writeln ('<IMG SRC="nextpage.gif" HEIGHT=17 BORDER=0 ALT="Next page"></A>');
   } else {
//   window.alert ('no next page');
   }
   document.writeln ('</TD><TD ALIGN="left">');
   document.writeln ('<A HREF="frameset.htm?TOC">');
   document.writeln ('<IMG SRC="showtoc.gif" HEIGHT=17 BORDER=0 ALT="Click to show the Table of Contents"></A></TD>');
   document.writeln ('<TD ALIGN="left">');
   document.writeln ('<A HREF="frameset.htm?IDX">');
   document.writeln ('<IMG SRC="showix.gif" HEIGHT=17 BORDER=0 ALT="Click to show the Index"></A></TD>');
   document.writeln ('</TD>');
   document.writeln ('</TR>');
   document.writeln ('</TABLE>');

}

</SCRIPT>
<table align="right" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td align="right"><font size="1">Seagate Software, Inc.<br>
    <a href="http://www.seagatesoftware.com">http://www.seagatesoftware.com</a><br>
    Please send comments to:<br>
    <a href="mailto:techpubs@seagatesoftware.com">techpubs@seagatesoftware.com</a><br>
    </font></td>
  </tr>
</table>
</body>
</html>


